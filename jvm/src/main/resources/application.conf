pekko {
  loglevel = "INFO"
  loglevel = ${?LOG_LEVEL}

  actor {
    allow-java-serialization = on // TODO: remove this line when I finish the Pekko Serialization Udemy course
  }

  http {
    client {
      idle-timeout = 1 hour
      websocket {
        periodic-keep-alive-mode = ping
        periodic-keep-alive-max-idle = 1 hour
      }
    }
  }

  persistence {
    journal {
      plugin = "jdbc-journal"

      // Enable the line below to automatically start the journal when the actorsystem is started
      auto-start-journals = ["jdbc-journal"]
    }

    snapshot-store {
      plugin = "jdbc-snapshot-store"
      // Enable the line below to automatically start the snapshot-store when the actorsystem is started
      auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }

    state {
      plugin = "jdbc-durable-state-store"
    }
  }
}

pekko-persistence-jdbc {
  shared-databases {
    slick {
      profile = "slick.jdbc.PostgresProfile$"
      db {
        host = "localhost"
        host = ${?POSTGRES_HOST}
        name = "docker"
        name = ${?POSTGRES_DB}
        url = "jdbc:postgresql://"${pekko-persistence-jdbc.shared-databases.slick.db.host}":5432/"${pekko-persistence-jdbc.shared-databases.slick.db.name}"?reWriteBatchedInserts=true"
        user = ${?POSTGRES_USER}
        password = ${?POSTGRES_PASSWORD}
        driver = "org.postgresql.Driver"
        numThreads = 5
        maxConnections = 5
        minConnections = 1
      }
    }
  }
}

jdbc-journal {
  //class = "org.apache.pekko.persistence.jdbc.journal.JdbcAsyncWriteJournal"
  use-shared-db = "slick"

  //event-adapters {
  //    twitch-channel-repository-adapter = "com.archimond7450.archiemate.actors.repositories.TwitchChannelRepository$ModelAdapter"
  //}

  //event-adapter-bindings {
  //    "com.archimond7450.archiemate.actors.repositories.TwitchChannelRepository$DomainModel$ChannelJoined" = twitch-channel-repository-adapter
  //    "com.archimond7450.archiemate.actors.repositories.TwitchChannelRepository$DomainModel$ChannelLeft" = twitch-channel-repository-adapter
  //}
}

# the pekko-persistence-snapshot-store in use
jdbc-snapshot-store {
  //class = "org.apache.pekko.persistence.jdbc.snapshot.JdbcSnapshotStore"
  use-shared-db = "slick"
}

# the pekko-persistence-query provider in use
jdbc-read-journal {
  //class = "org.apache.pekko.persistence.jdbc.query.JdbcReadJournalProvider"
  use-shared-db = "slick"
}

# the pekko-persistence-jdbc provider in use for durable state store
jdbc-durable-state-store {
  //class = "org.apache.pekko.persistence.jdbc.state.JdbcDurableStateStoreProvider"
  use-shared-db = "slick"
}

archiemate {
  ask-timeout = 5 seconds
  jwt {
    secret = ${?JWT_SECRET}
    expiration = 365 days
    issuer = "ArchieMate"
  }
  http {
    interface = "0.0.0.0"
    port = 8080
    redirect-uri-prefix = "http://localhost:8080"
    redirect-uri-prefix = ${?ARCHIEMATE_REDIRECT_URI_PREFIX}
  }
  new-login {
    expiration-time = 1 minute
    expiration-time = ${?TWITCH_NEW_LOGIN_TIME_TO_LOGIN}
  }
  twitch {
    app {
      client-id = ${?TWITCH_APP_CLIENT_ID}
      client-secret = ${?TWITCH_APP_CLIENT_SECRET}
      redirect-uri-postfix = ${?TWITCH_APP_REDIRECT_URI_POSTFIX}
    }
    eventsub {
      uri = "wss://eventsub.wss.twitch.tv/ws"
      keepalive = 30 seconds
    }
    irc {
      username = ${?TWITCH_USERNAME}
      token = ${?TWITCH_TOKEN}
      uri = "wss://irc-ws.chat.twitch.tv"
    }
  }
  youtube {
    app {
      client-id = ${?YOUTUBE_APP_CLIENT_ID}
      client-secret = ${?YOUTUBE_APP_CLIENT_SECRET}
      redirect-uri-postfix = ${?YOUTUBE_APP_REDIRECT_URI_POSTFIX}
    }
  }
}